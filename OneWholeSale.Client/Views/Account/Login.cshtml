@model OneWholeSale.Model.Dto.Login.loginDto
@{
    ViewBag.Title = "Login";
    Layout = null;
}
<!DOCTYPE html>
<html lang="zxx">
<head>
    <!-- End Google Tag Manager -->
    <title>Excise Department Login</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8">
    <!-- External CSS libraries -->
    <link type="text/css" rel="stylesheet" href="~/Animation/assets/css/bootstrap.min.css">
    <link type="text/css" rel="stylesheet" href="~/Animation/assets/fonts/font-awesome/css/font-awesome.min.css">
    <link type="text/css" rel="stylesheet" href="~/Animation/assets/fonts/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <!-- Favicon icon -->
    <link rel="shortcut icon" href="~/Animation/assets/img/favicon.ico" type="image/x-icon">
    <!-- Google fonts -->
    <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700,800%7CPoppins:400,500,700,800,900%7CRoboto:100,300,400,400i,500,700">
    <link href="https://fonts.googleapis.com/css2?family=Jost:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- Custom Stylesheet -->
    <link type="text/css" rel="stylesheet" href="~/Animation/assets/css/style.css">
    <link rel="stylesheet" type="text/css" id="style_sheet" href="~/Animation/assets/css/skins/default.css">
    <link type="text/css" rel="stylesheet" href="~/Animation/assets/css/custom.css">
</head>
<body id="top">
    <div class="page_loader"></div>
    @*<div class="loader"></div>*@
    <!-- Login 25 start -->
    <div class="login-25 tab-box">
        <div class="container-fluid">
            <div class="row">
                <div class="col-xl-8 col-lg-6 col-md-12 col-pad-0 bg-img none-992">
                    @*<canvas id="canvas" width="800" height="700"
                    style="background-color:#333"></canvas>*@
                </div>
                <div class="col-xl-4 col-lg-6 col-md-12 col-pad-0 bg-color-7">
                    <div class="login-inner-form ">
                        <div class="logo-2 none-2">
                            <a href="login-25.html">
                                <img src="~/Animation/img/civil_sipply_logo copy.png" class="img-fluid" />
                            </a>
                        </div>
                        <div class="details">

                            <form action="/Account/Login" method="post" >
                                <input type="hidden" name="returnUrl" value="@Request.Query["returnUrl"]" />
                                <!-- <h3>Sign Into Your Account</h3> -->
                                <h3>Login</h3>
                                @{
                                    string confirmMessage = Convert.ToString(TempData["Message"]); string warningMessage = Convert.ToString(TempData["WarningMessage"]);
                                }
                                @if (!string.IsNullOrEmpty(confirmMessage))
                                {
                                    <div class="alert alert-success alert-dismissable" id="divSuccessMessage">
                                        <input type="hidden" id="messagealert" value="@confirmMessage" />
                                        @confirmMessage
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                    </div>
                                }
                                else if (!string.IsNullOrEmpty(warningMessage))
                                {
                                    <div class="alert alert-warning alert-dismissable" id="divSuccessMessage">
                                        <input type="hidden" id="messagealert" value="@warningMessage" />
                                        @warningMessage
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                    </div>
                                }
                                else
                                {
                                    <input type="hidden" id="messagealert" value="0" />
                                }

                                <div class="form-group">
                                    <input type="text" name="username" class="input-text" placeholder="Username" required>
                                </div>
                                <div class="form-group">
                                    <input type="password" name="password" class="input-text" placeholder="Password" required>
                                </div>


                                <div class="form-group row">
                                    <div class="col-5">
                                        <button type="submit" id="btnsubmit" class="btn-md btn-primary">Login</button>
                                    </div>
                                    <div class="col-7">
                                        <a href="/Home/resetpassword" class="forgot">Reset Password</a>
                                    </div>
                                </div>

                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Login 25 end -->
    <!-- External JS libraries -->
    <script src="~/Animation/assets/js/jquery-2.2.0.min.js"></script>
    <script src="~/Animation/assets/js/popper.min.js"></script>
    <script src="~/Animation/assets/js/bootstrap.min.js"></script>
    <!-- Custom JS Script -->
    <script>
        $(window).load(function () {
            $('.loader').fadeOut(2500);
        });
        //function checkcaptcha() {
        //    var data = $("#captcha").val();
        //    var data1 = $("#captchatext").val();
        //    if (data == data1) {
        //        $("#btnsubmit").prop("disabled", false);
        //    }
        //    else {
        //        $("#btnsubmit").prop("disabled", true);
        //    }
        //}
    </script>
    <script>
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext("2d");
        var radius = canvas.height / 2;
        ctx.translate(radius, radius);
        radius = radius * 0.90
        setInterval(drawClock, 1000);

        function drawClock() {
            drawFace(ctx, radius);
            drawNumbers(ctx, radius);
            drawTime(ctx, radius);
        }

        function drawFace(ctx, radius) {
            var grad;
            ctx.beginPath();
            ctx.arc(0, 0, radius, 0, 2 * Math.PI);
            ctx.fillStyle = 'white';
            ctx.fill();
            grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);
            grad.addColorStop(0, '#333');
            grad.addColorStop(0.5, 'white');
            grad.addColorStop(1, '#333');
            ctx.strokeStyle = grad;
            ctx.lineWidth = radius * 0.1;
            ctx.stroke();
            ctx.beginPath();
            ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);
            ctx.fillStyle = '#333';
            ctx.fill();
        }

        function drawNumbers(ctx, radius) {
            var ang;
            var num;
            ctx.font = radius * 0.15 + "px arial";
            ctx.textBaseline = "middle";
            ctx.textAlign = "center";
            for (num = 1; num < 13; num++) {
                ang = num * Math.PI / 6;
                ctx.rotate(ang);
                ctx.translate(0, -radius * 0.85);
                ctx.rotate(-ang);
                ctx.fillText(num.toString(), 0, 0);
                ctx.rotate(ang);
                ctx.translate(0, radius * 0.85);
                ctx.rotate(-ang);
            }
        }

        function drawTime(ctx, radius) {
            var now = new Date();
            var hour = now.getHours();
            var minute = now.getMinutes();
            var second = now.getSeconds();
            //hour
            hour = hour % 12;
            hour = (hour * Math.PI / 6) +
                (minute * Math.PI / (6 * 60)) +
                (second * Math.PI / (360 * 60));
            drawHand(ctx, hour, radius * 0.5, radius * 0.07);
            //minute
            minute = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
            drawHand(ctx, minute, radius * 0.8, radius * 0.07);
            // second
            second = (second * Math.PI / 30);
            drawHand(ctx, second, radius * 0.9, radius * 0.02);
        }

        function drawHand(ctx, pos, length, width) {
            ctx.beginPath();
            ctx.lineWidth = width;
            ctx.lineCap = "round";
            ctx.moveTo(0, 0);
            ctx.rotate(pos);
            ctx.lineTo(0, -length);
            ctx.stroke();
            ctx.rotate(-pos);
        }
    </script>
</body>
</html>